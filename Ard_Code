#include <Time.h>
#include <SD.h>
#include <Wire.h>


// Definitions for the Temperature Reading
volatile float temp0;
volatile float temp1;
volatile float temp2;
volatile float temp3;
volatile float temp4;
//float average;

void setup() 
{
  Serial.begin(9600);                                          // Start the Serial Monitor with 9600 bps
  Wire.begin();                                                // Open library for the sensor
//  pinMode(9, OUTPUT);                                         // Pin 10 (The refrigerator) is stablished as output (10 due to the microSD)
  Serial.println("Welcome Mr. Halawani");                // Start of the program in the Serial Monitor
  Serial.println("'s' to turn on the program");                // Press "s" to start the loop without saving
  Serial.println("'h' to check the conection with the board"); // Press "h" to light the LED in the 13 pin
  Serial.println("'c' to check the sensors in the string");    // Press "c" to check if the sensors in the string are working
}

void loop() 
{
 Serial.print ("Start reading");
 Serial.println ();
 Serial.println ();
 temp0 = get_temp(0);
 temp1 = get_temp(1);
 temp2 = get_temp(2);
 temp3 = get_temp(3);
 temp4 = get_temp(4);
        Serial.print ("Sensor-0");
        Serial.print ("  ");
        Serial.print ("Sensor-1");
        Serial.print ("  ");
        Serial.println ("Sensor-2");
        Serial.print (temp0,2);                    // Temperature with 2 decimal places (float)
        Serial.print ("     ");
        Serial.print (temp1,2);                    // Temperature with 2 decimal places (float)
        Serial.print ("     ");
        Serial.print (temp2,2);                    // Temperature with 2 decimal places (float)
        Serial.println ();
        Serial.print ("Sensor-3");
        Serial.print ("  ");
        Serial.println ("Sensor 4");
        Serial.print (temp3,2);        // Temperature with 2 decimal places (float)
        Serial.print ("     ");
        Serial.print (temp4,2);        // Temperature with 2 decimal places (float)
        Serial.println ();
        delay(2000);        
        Serial.println ();
//        average = (temp0 + temp1 + temp2 + temp3 + temp4)/5;
//        Serial.println ("Average");
//        Serial.println (average);
//        delay(2000);
      }
    }
  }
}

float get_temp(int MCP9804_ADDRESS)             // MCP9804_ADDRESS is only a correct address if it contains the following bits 0 0 1 1 A2 A1 A0 r/w b
{         
  byte byte_1 = 0;                              // where A2, A1 and A0 are the address bits for the 8 MCP9804 sensors and r/w is the read/write bit
  byte byte_2 = 0;                              // for the data. In order to construct a correct address from the input parameter MCP9804_ADDRESS
  boolean sign_bit_set = false;
  MCP9804_ADDRESS ^= 24;                        // it has to be xor'ed with 24

  Wire.beginTransmission(MCP9804_ADDRESS);      // Begin transmission to the slave device (the digital temperature sensor with address MCP9804_ADDRESS)
  Wire.write(0x05);                             // Queue bits 0101 b for the register pointer. 0101 points to the temperature register TA
  Wire.endTransmission();                       // Transmit the pointer to the register

  Wire.requestFrom(MCP9804_ADDRESS, 2);         // Read two bytes from temperature register TA. The lower 13 bits contain the digital temperature in two's complement format
  byte_1 = Wire.read()&0x1f;                    // Read the lower 5 bits from the high byte (bit 8 up to and including bit 12)
  if (byte_1 & 0x10) 
  {
    sign_bit_set = true;
  }
  byte_2 = Wire.read();                         // Read the low byte
  if (!sign_bit_set) 
  {
    return ((byte_1 << 8) + float(byte_2))/16;  // implicit conversion to float
    Serial.print(byte_2);
  }
  else 
  {
    return float(8192 - ((byte_1 << 8) + byte_2))/-16;
  }
}       
